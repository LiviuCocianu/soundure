import React, { useMemo } from 'react'
import { Box, Text, Icon, ScrollView } from 'native-base'

import { useSelector } from 'react-redux'
import { faFolderPlus } from '@fortawesome/free-solid-svg-icons'
import { FontAwesomeIcon } from "@fortawesome/react-native-fontawesome"

import PlaylistElement from '../../playlist/PlaylistElement'
import NoContentInfo from '../../../general/NoContentInfo'
import { RESERVED_PLAYLISTS } from '../../../../constants'


/**
 * @callback navigateToPlaylist
 * @param {object} playlistObj Object containing information about the playlist
 */

/**
 * PlaylistsCategory component
 * 
 * @param {object} props props object
 * @param {object} props.navigation Object generated by React Navigation
 * @param {navigateToPlaylist} props.navigateToPlaylist Callback for navigating 
 *                             to the playlist page when a playlist element
 *                             is pressed
 * 
 * @returns {JSX.Element} JSX component
 */
const PlaylistsCategory = ({
    navigation,
    navigateToPlaylist
}) => {
    const playlists = useSelector(state => state.playlists);
    const renderPlaylists = useMemo(() => {
        return playlists.map(playlist => {
            if (RESERVED_PLAYLISTS.includes(playlist.title)) return;

            return <PlaylistElement
                navigation={navigation}
                playlistId={playlist.id}
                navigateToPlaylist={navigateToPlaylist}
                key={playlist.id}
            />;
        });
    }, [playlists]);

    return (
        <Box w="90%" h="350" mt="6"
            flex="1"
            flexGrow="0"
            alignItems="center"
            bg="primary.900"
            rounded="2xl"
        >
            <Box py="4"
                flex="0.2"
                justifyContent="center"
                alignItems="center"
            >
                <Text
                    color="white"
                    fontFamily="quicksand_b"
                    fontSize="lg">Începe să asculți!</Text>

                <Text
                    color="white"
                    fontFamily="manrope_l"
                    fontSize="sm">Alege un playlist</Text>
            </Box>

            {
                playlists.length > RESERVED_PLAYLISTS.length ? (
                    <ScrollView w="95%" flex="0.8"
                        _contentContainerStyle={{ flexGrow: 1 }}
                        nestedScrollEnabled
                        showsVerticalScrollIndicator={false}
                    >{renderPlaylists}</ScrollView>
                ) : (
                    <Box w="100%" flex="0.8">
                        <NoContentInfo
                            subtitle={<>
                                Selectează <Icon as={FontAwesomeIcon} icon={faFolderPlus} color="primary.500"/>
                                <Text color="primary.50"> Creează playlist</Text> pentru a începe!
                            </>}/>
                    </Box>
                )
            }
            
        </Box>
    );
};

export default PlaylistsCategory
